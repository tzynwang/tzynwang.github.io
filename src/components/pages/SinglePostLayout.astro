---
import type { MarkdownInstance, MarkdownHeading } from 'astro';
import type { EntryData } from '@Models/GeneralTypes';

import Html from '@Components/layout/Html.astro';
import Tag from '@Components/element/Tag.astro';
import { dateFormatter } from '@Tools/formatter';
import { getFlatTags } from '@Tools/post';

interface Props {
  entry: EntryData;
  headings: MarkdownHeading[];
  Content: MarkdownInstance<{}>['Content'];
}

const { entry, headings, Content } = Astro.props;
---

<Html
  title={entry.data.title}
  description={entry.data.summary || ''}
  image={entry.data.banner || ''}
>
  <div class="post-container">
    <h1>{entry.data.title}</h1>
    <div class="info">
      <span>{dateFormatter(entry.data.date)}</span>
      <span
        >{
          getFlatTags(entry.data.tag).map((tag) => <Tag tag={tag}>{tag}</Tag>)
        }</span
      >
      <ul class="toc-container">
        {
          headings.map((head) => (
            <li class={`toc-${head.depth}`}>
              <a href={`#${head.slug}`}>{head.text}</a>
            </li>
          ))
        }
      </ul>
    </div>
    <Content />
  </div>
</Html>

<style scoped>
  .post-container h1 {
    margin: 0;
    margin-bottom: 16px;
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .toc-container {
    margin-bottom: 0;
  }

  .toc-container > li:not(:last-of-type) {
    margin-bottom: 4px;
  }

  .toc-2 {
    margin-left: 1rem;
  }

  .toc-3 {
    margin-left: 2rem;
  }

  .toc-4 {
    margin-left: 3rem;
  }

  .toc-5 {
    margin-left: 4rem;
  }

  @media screen and (min-width: 800px) {
    .post-container {
      max-width: 600px;
    }
  }

  @media screen and (min-width: 1200px) {
    .post-container {
      max-width: 720px;
    }
  }
</style>
